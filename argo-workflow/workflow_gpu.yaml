apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: openfood-workflow-v1-
spec:
  entrypoint: main
  arguments:
    parameters:
      - name: device
        value: "gpu"
      - name: aws-secret-access-key
        value: "changeMe"
      - name: aws-default-region
        value: "us-east-1"
      - name: aws-s3-endpoint
        value: "minio.lab.sspcloud.fr"
      - name: aws-session-token
        value: "changeMe"
      - name: aws-access-key
        value: "changeMe"
      - name: mlflow-tracking-uri
        value: 'changeMe'
      - name: mlflow-experiment-name
        value: "openfood"
      - name: mlflow-s3-url
        value: "https://minio.lab.sspcloud.fr"
      - name: model-training-conf-list
        value: |
          [
            { "lr": 3e-4, "nepochs": 1 },
            { "lr": 5e-4, "nepochs": 2 }
          ]
  # Create a pvc for the workflow
  volumeClaimTemplates:
    - metadata:
        name: workflow-tmp
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi

  templates:
    #############################################################################################
    #################### main template for planning dag of the pipeline #########################
    #############################################################################################
    - name: main
      dag:
        tasks:
          # task 0: load code source and data
          - name: load-code-and-data
            template: load-code-and-data-wt
          # task 1: train model with cpu worker
          - name: train-model-with-cpu-worker
            dependencies: [ load-code-and-data ]
            template: run-model-training-wt
            arguments:
              parameters:
                - name: lr
                  value: "{{item.lr}}"
                - name: nepochs
                  value: "{{item.nepochs}}"
              # pass the inputs to the step "withParam"
            withParam: "{{workflow.parameters.model-training-conf-list}}"
            when: "{{workflow.parameters.device}} == cpu"
          # task 2: train model with gpu
          - name: train-model-with-gpu-worker
            dependencies: [ load-code-and-data ]
            template: gpu-model-training-wt
            arguments:
              parameters:
                - name: lr
                  value: "{{item.lr}}"
                - name: nepochs
                  value: "{{item.nepochs}}"
              # pass the inputs to the step "withParam"
            withParam: "{{workflow.parameters.model-training-conf-list}}"
            when: "{{workflow.parameters.device}} == gpu"


    ####################################################################################################################
    #################### task template for implementing the logic of each task of the pipeline #########################
    ####################################################################################################################
    # worker template for task-0 load code
    - name: load-code-and-data-wt
      inputs:
        artifacts:
          # Check out the master branch of the argo repo and place it at /src
          # revision can be anything that git checkout accepts: branch, commit, tag, etc.
          - name: code
            path: /mnt/bin
            git:
              repo: https://github.com/pengfei99/openfood.git
              revision: "main"
      container:
        image: liupengfei99/openfood-cpu-worker:latest
        command: [ sh, -c ]
        args: [ "mkdir -p /mnt/openfood_data;
                 python /mnt/bin/siamesenetwork/main.py -c /mnt/bin/siamesenetwork/config.yml;
                 ls -l /mnt/bin /mnt/openfood_data" ]
        env:
          - name: AWS_SECRET_ACCESS_KEY
            value: "{{workflow.parameters.aws-secret-access-key}}"
          - name: AWS_DEFAULT_REGION
            value: "{{workflow.parameters.aws-default-region}}"
          - name: AWS_S3_ENDPOINT
            value: "{{workflow.parameters.aws-s3-endpoint}}"
          - name: AWS_SESSION_TOKEN
            value: "{{workflow.parameters.aws-session-token}}"
          - name: AWS_ACCESS_KEY_ID
            value: "{{workflow.parameters.aws-access-key}}"
        volumeMounts:
          - name: workflow-tmp
            mountPath: /mnt

    # worker template for task-1 train model with cpu
    - name: cpu-model-training-wt
      inputs:
        parameters:
          - name: lr
          - name: nepochs
      container:
        image: liupengfei99/openfood-cpu-worker:latest
        command: [sh, -c]
        args: ["python /mnt/bin/siamesenetwork/run_pretrained_embedding_with_mlflow.py
                -c /mnt/bin/siamesenetwork/config.yml -n {{inputs.parameters.nepochs}} -l {{inputs.parameters.lr}}"]
        env:
          - name: AWS_SECRET_ACCESS_KEY
            value: "{{workflow.parameters.aws-secret-access-key}}"
          - name: AWS_DEFAULT_REGION
            value: "{{workflow.parameters.aws-default-region}}"
          - name: AWS_S3_ENDPOINT
            value: "{{workflow.parameters.aws-s3-endpoint}}"
          - name: AWS_SESSION_TOKEN
            value: "{{workflow.parameters.aws-session-token}}"
          - name: AWS_ACCESS_KEY_ID
            value: "{{workflow.parameters.aws-access-key}}"
          - name: MLFLOW_TRACKING_URI
            value: "{{workflow.parameters.mlflow-tracking-uri}}"
          - name: MLFLOW_EXPERIMENT_NAME
            value: "{{workflow.parameters.mlflow-experiment-name}}"
          - name: MLFLOW_S3_ENDPOINT_URL
            value: "{{workflow.parameters.mlflow-s3-url}}"
        volumeMounts:
          - name: workflow-tmp
            mountPath: /mnt

    # worker template for task-2 train model with gpu
    - name: gpu-model-training-wt
      inputs:
        parameters:
          - name: lr
          - name: nepochs
      container:
        image: liupengfei99/openfood-gpu-worker:latest
        command: [sh, -c]
        args: ["python /mnt/bin/siamesenetwork/run_pretrained_embedding_with_mlflow.py
                -c /mnt/bin/siamesenetwork/config.yml -n {{inputs.parameters.nepochs}} -l {{inputs.parameters.lr}}"]
        env:
          - name: AWS_SECRET_ACCESS_KEY
            value: "{{workflow.parameters.aws-secret-access-key}}"
          - name: AWS_DEFAULT_REGION
            value: "{{workflow.parameters.aws-default-region}}"
          - name: AWS_S3_ENDPOINT
            value: "{{workflow.parameters.aws-s3-endpoint}}"
          - name: AWS_SESSION_TOKEN
            value: "{{workflow.parameters.aws-session-token}}"
          - name: AWS_ACCESS_KEY_ID
            value: "{{workflow.parameters.aws-access-key}}"
          - name: MLFLOW_TRACKING_URI
            value: "{{workflow.parameters.mlflow-tracking-uri}}"
          - name: MLFLOW_EXPERIMENT_NAME
            value: "{{workflow.parameters.mlflow-experiment-name}}"
          - name: MLFLOW_S3_ENDPOINT_URL
            value: "{{workflow.parameters.mlflow-s3-url}}"
        volumeMounts:
          - name: workflow-tmp
            mountPath: /mnt

